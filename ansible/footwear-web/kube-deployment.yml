---
- name: Setup Kubernetes Cluster
  hosts: control_node
  gather_facts: false
  vars_files:
    - kube-vars.yml

  tasks:
    - name: Update apt
      apt:
        update_cache: yes

    - name: Install docker
      apt:
        name: docker.io
        state: present
        
    - name: Install microk8s
      snap:
        name: microk8s
        state: present
        classic: yes
    
    - name: Add user to docker and microk8s group
      user:
        name: ubuntu
        state: present
        groups:
          - docker
          - microk8s
    
    - name: Wait for microk8s to be ready
      command:
        cmd: microk8s status --wait-ready
      changed_when: false
    
    - name: Create directory for manifests
      file:
        path: "{{ manifest_dir }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0775

    - name: Copy manifests to node
      copy:
        src: "{{ item }}"
        dest: "{{ manifest_dir }}"
        mode: 0775
      loop: "{{ manifests_to_copy }}"
    
    - name: Copy template file for DB external service definition
      template:
        src: /home/host/kubernetes/footwear-deployment/{{ db_manifest.template }}
        dest: "{{ manifest_dir }}{{ db_manifest.svc }}"
        mode: 0775
    
    - name: Enable metrics-server addon for HPA resources
      command:
        cmd: "microk8s enable metrics-server"
    
    - name: Create kubernetes resources from manifests
      command:
        cmd: "microk8s kubectl create -f {{ item  }}"
        chdir: "{{ manifest_dir }}"
      loop: "{{ footwear_manifests }}"
    
    - name: Enable dashboard addon for kubernetes
      command:
        cmd: "microk8s enable dashboard"
    
    - name: Register kubernetes dashboard token to variable
      command: 
        cmd: "microk8s kubectl create token default"
      register: dashboard_token
      changed_when: false
    
    - name: Write dashboard token to local file
      local_action:
        module: copy
        content: "{{ dashboard_token.stdout }}"
        dest: /home/host/vault/dashboard_token.txt
    
    - name: Change dashboard service type to nodeport
      command:
        cmd: microk8s kubectl -n kube-system patch svc kubernetes-dashboard -p '{"spec"{{ ":" }} {"type"{{ ":" }} "NodePort"}}'

    - name: Change port to use 31000
      shell:
        cmd: microk8s kubectl -n kube-system patch svc kubernetes-dashboard --patch "$(cat {{ manifest_dir }}nodeport_snippet.yml)"
